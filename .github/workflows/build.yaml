---
name: 'Container image'
on:
  push:
    branches:
      - main
    tags:
      - '**'
    paths-ignore:
      - README.md
  pull_request:
    paths-ignore:
      - README.md
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PLATFORMS: linux/amd64,linux/arm/v7,linux/arm64
    services:
      registry:
        image: registry:2
        ports:
         - 5000:5000
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: ${{ env.PLATFORMS }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          config-inline: |
            [worker.oci]
              max-parallelism = 4
          driver-opts: network=host
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-ghcache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-ghcache-
      - run: cat ./hack/Makefile
      - name: Build candidate image
        id: build_candidate
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: localhost:5000/${{ github.repository_owner }}/golang-with-libgit2:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - name: Inspect candidate image
        run: |
          docker buildx imagetools inspect localhost:5000/${{ github.repository_owner }}/golang-with-libgit2:latest
      - name: Test candidate image
        id: test_candidate
        run: |
          IMG=localhost:5000/${{ github.repository_owner }}/golang-with-libgit2 make test
      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Compose release candidate metadata
        id: meta
        uses: docker/metadata-action@v3
        if: github.event_name != 'pull_request'
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/golang-with-libgit2
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=sha,format=long
      - name: Release candidate image
        id: release_candidate
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
